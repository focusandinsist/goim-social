apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis
  namespace: im-system
  labels:
    app: redis
    app.kubernetes.io/name: redis
    app.kubernetes.io/component: cache
    app.kubernetes.io/part-of: instant-messaging
spec:
  serviceName: redis
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
        app.kubernetes.io/name: redis
        app.kubernetes.io/component: cache
    spec:
      securityContext:
        fsGroup: 999
      containers:
      - name: redis
        image: redis:7-alpine
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 6379
          name: redis
        command:
        - redis-server
        - /etc/redis/redis.conf
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-secret
              key: REDIS_PASSWORD
        volumeMounts:
        - name: redis-storage
          mountPath: /data
        - name: redis-config
          mountPath: /etc/redis
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          exec:
            command:
            - redis-cli
            - --raw
            - incr
            - ping
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 6
        readinessProbe:
          exec:
            command:
            - redis-cli
            - --raw
            - incr
            - ping
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 6
      volumes:
      - name: redis-config
        configMap:
          name: redis-config
  volumeClaimTemplates:
  - metadata:
      name: redis-storage
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: im-ssd
      resources:
        requests:
          storage: 10Gi

---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: im-system
  labels:
    app: redis
    app.kubernetes.io/name: redis
    app.kubernetes.io/component: cache
    app.kubernetes.io/part-of: instant-messaging
spec:
  type: ClusterIP
  ports:
  - port: 6379
    targetPort: 6379
    protocol: TCP
    name: redis
  selector:
    app: redis

---
# Redis Sentinel配置 (高可用，可选)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-sentinel
  namespace: im-system
  labels:
    app: redis-sentinel
    app.kubernetes.io/name: redis-sentinel
    app.kubernetes.io/component: cache
    app.kubernetes.io/part-of: instant-messaging
spec:
  replicas: 3
  selector:
    matchLabels:
      app: redis-sentinel
  template:
    metadata:
      labels:
        app: redis-sentinel
        app.kubernetes.io/name: redis-sentinel
        app.kubernetes.io/component: cache
    spec:
      containers:
      - name: redis-sentinel
        image: redis:7-alpine
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 26379
          name: sentinel
        command:
        - redis-sentinel
        - /etc/redis-sentinel/sentinel.conf
        volumeMounts:
        - name: sentinel-config
          mountPath: /etc/redis-sentinel
        resources:
          requests:
            memory: "64Mi"
            cpu: "100m"
          limits:
            memory: "128Mi"
            cpu: "200m"
        livenessProbe:
          exec:
            command:
            - redis-cli
            - -p
            - "26379"
            - ping
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 6
        readinessProbe:
          exec:
            command:
            - redis-cli
            - -p
            - "26379"
            - ping
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 6
      volumes:
      - name: sentinel-config
        configMap:
          name: redis-sentinel-config

---
apiVersion: v1
kind: Service
metadata:
  name: redis-sentinel
  namespace: im-system
  labels:
    app: redis-sentinel
    app.kubernetes.io/name: redis-sentinel
    app.kubernetes.io/component: cache
    app.kubernetes.io/part-of: instant-messaging
spec:
  type: ClusterIP
  ports:
  - port: 26379
    targetPort: 26379
    protocol: TCP
    name: sentinel
  selector:
    app: redis-sentinel

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-sentinel-config
  namespace: im-system
  labels:
    app: redis-sentinel
    app.kubernetes.io/name: redis-sentinel-config
    app.kubernetes.io/component: cache
data:
  sentinel.conf: |
    # Redis Sentinel配置
    port 26379
    bind 0.0.0.0
    
    # 监控主节点
    sentinel monitor mymaster redis.im-system.svc.cluster.local 6379 2
    sentinel auth-pass mymaster redis123
    sentinel down-after-milliseconds mymaster 30000
    sentinel parallel-syncs mymaster 1
    sentinel failover-timeout mymaster 180000
    
    # 日志配置
    logfile /var/log/redis-sentinel.log
    loglevel notice
    
    # 安全配置
    protected-mode no
