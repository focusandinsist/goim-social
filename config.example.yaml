# 示例配置文件
# 复制为 config.yaml 并根据需要修改
#
# 端口分配规则：
# - HTTP端口从21001开始，按服务启动顺序递增
# - gRPC端口从22001开始，按服务启动顺序递增
#
# 服务启动顺序（按依赖关系）：
# 1. User Service    - HTTP:21001, gRPC:22001 (基础服务)
# 2. Group Service   - HTTP:21002, gRPC:22002 (基础服务，PostgreSQL)
# 3. Friend Service  - HTTP:21003, gRPC:22003 (依赖User，MongoDB)
# 4. Message Service - HTTP:21004, gRPC:22004 (依赖User、Group，MongoDB)
# 5. Logic Service   - HTTP:21005, gRPC:22005 (依赖Group、Message)
# 6. Connect Service - HTTP:21006, gRPC:22006 (依赖Message、Logic，MongoDB)
# 7. Content Service - HTTP:21007, gRPC:22007 (内容服务，PostgreSQL)
# 8. Interaction Service - HTTP:21008, gRPC:22008 (互动服务，PostgreSQL)
# 9. Comment Service - HTTP:21009, gRPC:22009 (评论服务，PostgreSQL)
# 10. History Service - HTTP:21010, gRPC:22010 (历史记录服务，PostgreSQL)
# 11. Search Service - HTTP:21011, gRPC:22011 (搜索服务，ElasticSearch+PostgreSQL)

server:
  http:
    network: tcp
    addr: :21001  # 默认为User Service端口，其他服务需要通过环境变量覆盖
    timeout: 30s
  grpc:
    network: tcp
    addr: :22001  # 默认为User Service端口，其他服务需要通过环境变量覆盖
    timeout: 30s

database:
  mongodb:
    uri: mongodb://localhost:27017
    db_name: serviceDB
  postgresql:
    dsn: "host=localhost user=postgres password=123456 dbname=serviceDB port=5432 sslmode=disable TimeZone=Asia/Shanghai"
    db_name: serviceDB

redis:
  addr: localhost:6379
  password: ""
  db: 0

kafka:
  brokers:
    - localhost:9092
  group_id: service-group

connect:
  message_service:
    host: localhost
    port: 22004
  logic_service:
    host: localhost
    port: 22005
  instance:
    host: localhost
    port: 21006
  heartbeat:
    interval: 10
    timeout: 30
  connection:
    expire_time: 2
    client_type: web

logic:
  group_service:
    host: localhost
    port: 22002
  message_service:
    host: localhost
    port: 22004

search:
  server:
    port: 21011
    mode: debug
    read_timeout: 30s
    write_timeout: 30s
    idle_timeout: 60s

  elasticsearch:
    addresses:
      - http://localhost:9200
    username: ""
    password: ""
    max_retries: 3
    retry_backoff: 100ms
    max_retry_backoff: 30s
    enable_retry_on_timeout: true
    discover_nodes_on_start: false
    discover_nodes_interval: 60s
    enable_metrics: true
    enable_debug_logger: false
    compression: true
    sniff: false

  search_config:
    default_page_size: 20
    max_page_size: 100
    search_timeout: 30s
    highlight_pre_tag: "<mark>"
    highlight_post_tag: "</mark>"
    max_query_length: 500
    min_query_length: 1

    indices:
      content:
        name: "goim-content"
        shards: 3
        replicas: 1
        refresh_interval: "1s"
        max_result_window: 10000
      user:
        name: "goim-user"
        shards: 1
        replicas: 1
        refresh_interval: "5s"
        max_result_window: 10000
      message:
        name: "goim-message"
        shards: 5
        replicas: 1
        refresh_interval: "1s"
        max_result_window: 10000
      group:
        name: "goim-group"
        shards: 1
        replicas: 1
        refresh_interval: "5s"
        max_result_window: 10000

    weights:
      title: 3.0
      content: 1.0
      summary: 2.0
      tags: 2.0
      username: 2.5
      nickname: 2.0
      bio: 1.0
      group_name: 2.0
      description: 1.5

    cache:
      enabled: true
      search_results_ttl: 300s
      hot_queries_ttl: 3600s
      user_search_history_ttl: 86400s
      suggestions_ttl: 300s
      user_preference_ttl: 86400s

    suggestions:
      max_suggestions: 10
      min_query_length: 2
      enable_fuzzy: true
      fuzzy_distance: 2

    analytics:
      enabled: true
      batch_size: 100
      flush_interval: 10s
      retention_days: 90

  sync:
    enabled: true
    batch_size: 1000
    workers: 5
    retry_attempts: 3
    retry_delay: 5s
    sync_interval: 300s

    sources:
      content_service:
        host: localhost
        port: 22007
        database: goim_content
        table: contents
        id_field: id
        updated_field: updated_at
      user_service:
        host: localhost
        port: 22001
        database: goim_user
        table: users
        id_field: id
        updated_field: updated_at
      message_service:
        host: localhost
        port: 22004
        database: goim_message
        table: messages
        id_field: id
        updated_field: created_at
      social_service:
        host: localhost
        port: 22002
        database: goim_social
        table: groups
        id_field: id
        updated_field: updated_at

  rate_limit:
    enabled: true
    requests_per_second: 100
    burst: 200
    cleanup_interval: 60s

    endpoints:
      search: 50
      suggestions: 20
      admin: 10

  security:
    enable_cors: true
    cors_origins: ["*"]
    cors_methods: ["GET", "POST", "PUT", "DELETE", "OPTIONS"]
    cors_headers: ["Origin", "Content-Type", "Accept", "Authorization", "X-User-ID"]

    jwt:
      secret: "your-jwt-secret-key"
      expire_time: 24h
      issuer: "goim-search-service"

    admin:
      enabled: true
      users:
        - username: admin
          password: admin123
          permissions: ["read", "write", "admin"]

  monitoring:
    enabled: true
    metrics_path: /metrics
    health_path: /health
    pprof_enabled: false

    alerts:
      high_latency_threshold: 1s
      high_error_rate_threshold: 0.05
      low_success_rate_threshold: 0.95

logger:
  level: info
  format: json
  output: stdout
  file_path: ./logs/service.log
  max_size: 100
  max_backups: 10
  max_age: 30
  compress: true

telemetry:
  endpoint: http://localhost:14268/api/traces
  service_name: goim-service
  service_version: 1.0.0
  environment: development
  sample_rate: 0.1
  enable_metrics: true
  metrics_port: 9090
