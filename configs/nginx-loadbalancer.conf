# Nginx负载均衡配置
# 支持Connect服务多实例部署

# WebSocket连接的负载均衡配置
upstream connect_websocket {
    # 使用ip_hash确保同一用户的连接总是路由到同一个实例
    # 这对WebSocket长连接很重要
    ip_hash;
    
    # Connect服务实例列表
    server 127.0.0.1:21003 weight=1 max_fails=3 fail_timeout=30s;
    server 127.0.0.1:21013 weight=1 max_fails=3 fail_timeout=30s;
    server 127.0.0.1:21023 weight=1 max_fails=3 fail_timeout=30s;
    
    # 健康检查
    keepalive 32;
}

# HTTP API的负载均衡配置
upstream connect_http {
    # 使用轮询算法分发HTTP请求
    least_conn;
    
    # Connect服务实例列表
    server 127.0.0.1:21003 weight=1 max_fails=3 fail_timeout=30s;
    server 127.0.0.1:21013 weight=1 max_fails=3 fail_timeout=30s;
    server 127.0.0.1:21023 weight=1 max_fails=3 fail_timeout=30s;
}

# WebSocket代理配置
server {
    listen 80;
    server_name websocket.example.com;
    
    # WebSocket升级配置
    location /ws {
        proxy_pass http://connect_websocket;
        
        # WebSocket必需的头部
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 超时配置
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # 缓冲配置
        proxy_buffering off;
    }
    
    # HTTP API代理配置
    location /api/ {
        proxy_pass http://connect_http;
        
        # 标准HTTP头部
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 超时配置
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }
    
    # 健康检查端点
    location /health {
        proxy_pass http://connect_http/health;
        access_log off;
    }
}

# HTTPS配置（可选）
server {
    listen 443 ssl http2;
    server_name websocket.example.com;
    
    # SSL证书配置
    ssl_certificate /path/to/certificate.crt;
    ssl_certificate_key /path/to/private.key;
    
    # SSL安全配置
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    
    # WebSocket升级配置（HTTPS）
    location /ws {
        proxy_pass http://connect_websocket;
        
        # WebSocket必需的头部
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 超时配置
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # 缓冲配置
        proxy_buffering off;
    }
    
    # HTTP API代理配置（HTTPS）
    location /api/ {
        proxy_pass http://connect_http;
        
        # 标准HTTP头部
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 超时配置
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }
}

# 日志配置
log_format websocket_log '$remote_addr - $remote_user [$time_local] '
                        '"$request" $status $body_bytes_sent '
                        '"$http_referer" "$http_user_agent" '
                        '$upstream_addr $upstream_response_time';

access_log /var/log/nginx/websocket_access.log websocket_log;
error_log /var/log/nginx/websocket_error.log warn;
