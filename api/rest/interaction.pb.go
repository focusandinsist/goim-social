// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.23.2
// source: interaction.proto

package rest

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 互动类型枚举
type InteractionType int32

const (
	InteractionType_INTERACTION_TYPE_UNSPECIFIED InteractionType = 0
	InteractionType_INTERACTION_TYPE_LIKE        InteractionType = 1 // 点赞
	InteractionType_INTERACTION_TYPE_FAVORITE    InteractionType = 2 // 收藏
	InteractionType_INTERACTION_TYPE_SHARE       InteractionType = 3 // 分享
	InteractionType_INTERACTION_TYPE_REPOST      InteractionType = 4 // 转发
)

// Enum value maps for InteractionType.
var (
	InteractionType_name = map[int32]string{
		0: "INTERACTION_TYPE_UNSPECIFIED",
		1: "INTERACTION_TYPE_LIKE",
		2: "INTERACTION_TYPE_FAVORITE",
		3: "INTERACTION_TYPE_SHARE",
		4: "INTERACTION_TYPE_REPOST",
	}
	InteractionType_value = map[string]int32{
		"INTERACTION_TYPE_UNSPECIFIED": 0,
		"INTERACTION_TYPE_LIKE":        1,
		"INTERACTION_TYPE_FAVORITE":    2,
		"INTERACTION_TYPE_SHARE":       3,
		"INTERACTION_TYPE_REPOST":      4,
	}
)

func (x InteractionType) Enum() *InteractionType {
	p := new(InteractionType)
	*p = x
	return p
}

func (x InteractionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InteractionType) Descriptor() protoreflect.EnumDescriptor {
	return file_interaction_proto_enumTypes[0].Descriptor()
}

func (InteractionType) Type() protoreflect.EnumType {
	return &file_interaction_proto_enumTypes[0]
}

func (x InteractionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InteractionType.Descriptor instead.
func (InteractionType) EnumDescriptor() ([]byte, []int) {
	return file_interaction_proto_rawDescGZIP(), []int{0}
}

// 对象类型枚举
type InteractionObjectType int32

const (
	InteractionObjectType_OBJECT_TYPE_UNSPECIFIED InteractionObjectType = 0
	InteractionObjectType_OBJECT_TYPE_POST        InteractionObjectType = 1 // 帖子
	InteractionObjectType_OBJECT_TYPE_COMMENT     InteractionObjectType = 2 // 评论
	InteractionObjectType_OBJECT_TYPE_USER        InteractionObjectType = 3 // 用户（关注等）
)

// Enum value maps for InteractionObjectType.
var (
	InteractionObjectType_name = map[int32]string{
		0: "OBJECT_TYPE_UNSPECIFIED",
		1: "OBJECT_TYPE_POST",
		2: "OBJECT_TYPE_COMMENT",
		3: "OBJECT_TYPE_USER",
	}
	InteractionObjectType_value = map[string]int32{
		"OBJECT_TYPE_UNSPECIFIED": 0,
		"OBJECT_TYPE_POST":        1,
		"OBJECT_TYPE_COMMENT":     2,
		"OBJECT_TYPE_USER":        3,
	}
)

func (x InteractionObjectType) Enum() *InteractionObjectType {
	p := new(InteractionObjectType)
	*p = x
	return p
}

func (x InteractionObjectType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InteractionObjectType) Descriptor() protoreflect.EnumDescriptor {
	return file_interaction_proto_enumTypes[1].Descriptor()
}

func (InteractionObjectType) Type() protoreflect.EnumType {
	return &file_interaction_proto_enumTypes[1]
}

func (x InteractionObjectType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InteractionObjectType.Descriptor instead.
func (InteractionObjectType) EnumDescriptor() ([]byte, []int) {
	return file_interaction_proto_rawDescGZIP(), []int{1}
}

// 互动记录
type Interaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                    int64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId                int64                 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                                                                                // 用户ID
	ObjectId              int64                 `protobuf:"varint,3,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`                                                                          // 对象ID
	InteractionObjectType InteractionObjectType `protobuf:"varint,4,opt,name=interaction_object_type,json=interactionObjectType,proto3,enum=rest.InteractionObjectType" json:"interaction_object_type,omitempty"` // 对象类型
	InteractionType       InteractionType       `protobuf:"varint,5,opt,name=interaction_type,json=interactionType,proto3,enum=rest.InteractionType" json:"interaction_type,omitempty"`                           // 互动类型
	Metadata              string                `protobuf:"bytes,6,opt,name=metadata,proto3" json:"metadata,omitempty"`                                                                                           // 元数据(JSON格式，如转发评论)
	CreatedAt             string                `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *Interaction) Reset() {
	*x = Interaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_interaction_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Interaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Interaction) ProtoMessage() {}

func (x *Interaction) ProtoReflect() protoreflect.Message {
	mi := &file_interaction_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Interaction.ProtoReflect.Descriptor instead.
func (*Interaction) Descriptor() ([]byte, []int) {
	return file_interaction_proto_rawDescGZIP(), []int{0}
}

func (x *Interaction) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Interaction) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Interaction) GetObjectId() int64 {
	if x != nil {
		return x.ObjectId
	}
	return 0
}

func (x *Interaction) GetInteractionObjectType() InteractionObjectType {
	if x != nil {
		return x.InteractionObjectType
	}
	return InteractionObjectType_OBJECT_TYPE_UNSPECIFIED
}

func (x *Interaction) GetInteractionType() InteractionType {
	if x != nil {
		return x.InteractionType
	}
	return InteractionType_INTERACTION_TYPE_UNSPECIFIED
}

func (x *Interaction) GetMetadata() string {
	if x != nil {
		return x.Metadata
	}
	return ""
}

func (x *Interaction) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

// 互动统计
type InteractionStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectId              int64                 `protobuf:"varint,1,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
	InteractionObjectType InteractionObjectType `protobuf:"varint,2,opt,name=interaction_object_type,json=interactionObjectType,proto3,enum=rest.InteractionObjectType" json:"interaction_object_type,omitempty"`
	LikeCount             int64                 `protobuf:"varint,3,opt,name=like_count,json=likeCount,proto3" json:"like_count,omitempty"`             // 点赞数
	FavoriteCount         int64                 `protobuf:"varint,4,opt,name=favorite_count,json=favoriteCount,proto3" json:"favorite_count,omitempty"` // 收藏数
	ShareCount            int64                 `protobuf:"varint,5,opt,name=share_count,json=shareCount,proto3" json:"share_count,omitempty"`          // 分享数
	RepostCount           int64                 `protobuf:"varint,6,opt,name=repost_count,json=repostCount,proto3" json:"repost_count,omitempty"`       // 转发数
}

func (x *InteractionStats) Reset() {
	*x = InteractionStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_interaction_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InteractionStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InteractionStats) ProtoMessage() {}

func (x *InteractionStats) ProtoReflect() protoreflect.Message {
	mi := &file_interaction_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InteractionStats.ProtoReflect.Descriptor instead.
func (*InteractionStats) Descriptor() ([]byte, []int) {
	return file_interaction_proto_rawDescGZIP(), []int{1}
}

func (x *InteractionStats) GetObjectId() int64 {
	if x != nil {
		return x.ObjectId
	}
	return 0
}

func (x *InteractionStats) GetInteractionObjectType() InteractionObjectType {
	if x != nil {
		return x.InteractionObjectType
	}
	return InteractionObjectType_OBJECT_TYPE_UNSPECIFIED
}

func (x *InteractionStats) GetLikeCount() int64 {
	if x != nil {
		return x.LikeCount
	}
	return 0
}

func (x *InteractionStats) GetFavoriteCount() int64 {
	if x != nil {
		return x.FavoriteCount
	}
	return 0
}

func (x *InteractionStats) GetShareCount() int64 {
	if x != nil {
		return x.ShareCount
	}
	return 0
}

func (x *InteractionStats) GetRepostCount() int64 {
	if x != nil {
		return x.RepostCount
	}
	return 0
}

// 执行互动请求
type DoInteractionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId                int64                 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ObjectId              int64                 `protobuf:"varint,2,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
	InteractionObjectType InteractionObjectType `protobuf:"varint,3,opt,name=interaction_object_type,json=interactionObjectType,proto3,enum=rest.InteractionObjectType" json:"interaction_object_type,omitempty"`
	InteractionType       InteractionType       `protobuf:"varint,4,opt,name=interaction_type,json=interactionType,proto3,enum=rest.InteractionType" json:"interaction_type,omitempty"`
	Metadata              string                `protobuf:"bytes,5,opt,name=metadata,proto3" json:"metadata,omitempty"` // 可选的元数据
}

func (x *DoInteractionRequest) Reset() {
	*x = DoInteractionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_interaction_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DoInteractionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoInteractionRequest) ProtoMessage() {}

func (x *DoInteractionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_interaction_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoInteractionRequest.ProtoReflect.Descriptor instead.
func (*DoInteractionRequest) Descriptor() ([]byte, []int) {
	return file_interaction_proto_rawDescGZIP(), []int{2}
}

func (x *DoInteractionRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *DoInteractionRequest) GetObjectId() int64 {
	if x != nil {
		return x.ObjectId
	}
	return 0
}

func (x *DoInteractionRequest) GetInteractionObjectType() InteractionObjectType {
	if x != nil {
		return x.InteractionObjectType
	}
	return InteractionObjectType_OBJECT_TYPE_UNSPECIFIED
}

func (x *DoInteractionRequest) GetInteractionType() InteractionType {
	if x != nil {
		return x.InteractionType
	}
	return InteractionType_INTERACTION_TYPE_UNSPECIFIED
}

func (x *DoInteractionRequest) GetMetadata() string {
	if x != nil {
		return x.Metadata
	}
	return ""
}

// 执行互动响应
type DoInteractionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success     bool         `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message     string       `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Interaction *Interaction `protobuf:"bytes,3,opt,name=interaction,proto3" json:"interaction,omitempty"`
}

func (x *DoInteractionResponse) Reset() {
	*x = DoInteractionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_interaction_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DoInteractionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoInteractionResponse) ProtoMessage() {}

func (x *DoInteractionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_interaction_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoInteractionResponse.ProtoReflect.Descriptor instead.
func (*DoInteractionResponse) Descriptor() ([]byte, []int) {
	return file_interaction_proto_rawDescGZIP(), []int{3}
}

func (x *DoInteractionResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DoInteractionResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DoInteractionResponse) GetInteraction() *Interaction {
	if x != nil {
		return x.Interaction
	}
	return nil
}

// 取消互动请求
type UndoInteractionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId                int64                 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ObjectId              int64                 `protobuf:"varint,2,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
	InteractionObjectType InteractionObjectType `protobuf:"varint,3,opt,name=interaction_object_type,json=interactionObjectType,proto3,enum=rest.InteractionObjectType" json:"interaction_object_type,omitempty"`
	InteractionType       InteractionType       `protobuf:"varint,4,opt,name=interaction_type,json=interactionType,proto3,enum=rest.InteractionType" json:"interaction_type,omitempty"`
}

func (x *UndoInteractionRequest) Reset() {
	*x = UndoInteractionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_interaction_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UndoInteractionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UndoInteractionRequest) ProtoMessage() {}

func (x *UndoInteractionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_interaction_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UndoInteractionRequest.ProtoReflect.Descriptor instead.
func (*UndoInteractionRequest) Descriptor() ([]byte, []int) {
	return file_interaction_proto_rawDescGZIP(), []int{4}
}

func (x *UndoInteractionRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UndoInteractionRequest) GetObjectId() int64 {
	if x != nil {
		return x.ObjectId
	}
	return 0
}

func (x *UndoInteractionRequest) GetInteractionObjectType() InteractionObjectType {
	if x != nil {
		return x.InteractionObjectType
	}
	return InteractionObjectType_OBJECT_TYPE_UNSPECIFIED
}

func (x *UndoInteractionRequest) GetInteractionType() InteractionType {
	if x != nil {
		return x.InteractionType
	}
	return InteractionType_INTERACTION_TYPE_UNSPECIFIED
}

// 取消互动响应
type UndoInteractionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *UndoInteractionResponse) Reset() {
	*x = UndoInteractionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_interaction_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UndoInteractionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UndoInteractionResponse) ProtoMessage() {}

func (x *UndoInteractionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_interaction_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UndoInteractionResponse.ProtoReflect.Descriptor instead.
func (*UndoInteractionResponse) Descriptor() ([]byte, []int) {
	return file_interaction_proto_rawDescGZIP(), []int{5}
}

func (x *UndoInteractionResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UndoInteractionResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 检查互动状态请求
type CheckInteractionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId                int64                 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ObjectId              int64                 `protobuf:"varint,2,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
	InteractionObjectType InteractionObjectType `protobuf:"varint,3,opt,name=interaction_object_type,json=interactionObjectType,proto3,enum=rest.InteractionObjectType" json:"interaction_object_type,omitempty"`
	InteractionType       InteractionType       `protobuf:"varint,4,opt,name=interaction_type,json=interactionType,proto3,enum=rest.InteractionType" json:"interaction_type,omitempty"`
}

func (x *CheckInteractionRequest) Reset() {
	*x = CheckInteractionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_interaction_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckInteractionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckInteractionRequest) ProtoMessage() {}

func (x *CheckInteractionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_interaction_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckInteractionRequest.ProtoReflect.Descriptor instead.
func (*CheckInteractionRequest) Descriptor() ([]byte, []int) {
	return file_interaction_proto_rawDescGZIP(), []int{6}
}

func (x *CheckInteractionRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CheckInteractionRequest) GetObjectId() int64 {
	if x != nil {
		return x.ObjectId
	}
	return 0
}

func (x *CheckInteractionRequest) GetInteractionObjectType() InteractionObjectType {
	if x != nil {
		return x.InteractionObjectType
	}
	return InteractionObjectType_OBJECT_TYPE_UNSPECIFIED
}

func (x *CheckInteractionRequest) GetInteractionType() InteractionType {
	if x != nil {
		return x.InteractionType
	}
	return InteractionType_INTERACTION_TYPE_UNSPECIFIED
}

// 检查互动状态响应
type CheckInteractionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success        bool         `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message        string       `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	HasInteraction bool         `protobuf:"varint,3,opt,name=has_interaction,json=hasInteraction,proto3" json:"has_interaction,omitempty"`
	Interaction    *Interaction `protobuf:"bytes,4,opt,name=interaction,proto3" json:"interaction,omitempty"` // 如果存在互动，返回详情
}

func (x *CheckInteractionResponse) Reset() {
	*x = CheckInteractionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_interaction_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckInteractionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckInteractionResponse) ProtoMessage() {}

func (x *CheckInteractionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_interaction_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckInteractionResponse.ProtoReflect.Descriptor instead.
func (*CheckInteractionResponse) Descriptor() ([]byte, []int) {
	return file_interaction_proto_rawDescGZIP(), []int{7}
}

func (x *CheckInteractionResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CheckInteractionResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CheckInteractionResponse) GetHasInteraction() bool {
	if x != nil {
		return x.HasInteraction
	}
	return false
}

func (x *CheckInteractionResponse) GetInteraction() *Interaction {
	if x != nil {
		return x.Interaction
	}
	return nil
}

// 获取对象统计请求
type GetObjectStatsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectId              int64                 `protobuf:"varint,1,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
	InteractionObjectType InteractionObjectType `protobuf:"varint,2,opt,name=interaction_object_type,json=interactionObjectType,proto3,enum=rest.InteractionObjectType" json:"interaction_object_type,omitempty"`
}

func (x *GetObjectStatsRequest) Reset() {
	*x = GetObjectStatsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_interaction_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetObjectStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetObjectStatsRequest) ProtoMessage() {}

func (x *GetObjectStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_interaction_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetObjectStatsRequest.ProtoReflect.Descriptor instead.
func (*GetObjectStatsRequest) Descriptor() ([]byte, []int) {
	return file_interaction_proto_rawDescGZIP(), []int{8}
}

func (x *GetObjectStatsRequest) GetObjectId() int64 {
	if x != nil {
		return x.ObjectId
	}
	return 0
}

func (x *GetObjectStatsRequest) GetInteractionObjectType() InteractionObjectType {
	if x != nil {
		return x.InteractionObjectType
	}
	return InteractionObjectType_OBJECT_TYPE_UNSPECIFIED
}

// 获取对象统计响应
type GetObjectStatsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool              `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message string            `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Stats   *InteractionStats `protobuf:"bytes,3,opt,name=stats,proto3" json:"stats,omitempty"`
}

func (x *GetObjectStatsResponse) Reset() {
	*x = GetObjectStatsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_interaction_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetObjectStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetObjectStatsResponse) ProtoMessage() {}

func (x *GetObjectStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_interaction_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetObjectStatsResponse.ProtoReflect.Descriptor instead.
func (*GetObjectStatsResponse) Descriptor() ([]byte, []int) {
	return file_interaction_proto_rawDescGZIP(), []int{9}
}

func (x *GetObjectStatsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetObjectStatsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetObjectStatsResponse) GetStats() *InteractionStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

// 批量获取对象统计请求
type GetBatchObjectStatsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectIds             []int64               `protobuf:"varint,1,rep,packed,name=object_ids,json=objectIds,proto3" json:"object_ids,omitempty"`
	InteractionObjectType InteractionObjectType `protobuf:"varint,2,opt,name=interaction_object_type,json=interactionObjectType,proto3,enum=rest.InteractionObjectType" json:"interaction_object_type,omitempty"`
}

func (x *GetBatchObjectStatsRequest) Reset() {
	*x = GetBatchObjectStatsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_interaction_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBatchObjectStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBatchObjectStatsRequest) ProtoMessage() {}

func (x *GetBatchObjectStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_interaction_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBatchObjectStatsRequest.ProtoReflect.Descriptor instead.
func (*GetBatchObjectStatsRequest) Descriptor() ([]byte, []int) {
	return file_interaction_proto_rawDescGZIP(), []int{10}
}

func (x *GetBatchObjectStatsRequest) GetObjectIds() []int64 {
	if x != nil {
		return x.ObjectIds
	}
	return nil
}

func (x *GetBatchObjectStatsRequest) GetInteractionObjectType() InteractionObjectType {
	if x != nil {
		return x.InteractionObjectType
	}
	return InteractionObjectType_OBJECT_TYPE_UNSPECIFIED
}

// 批量获取对象统计响应
type GetBatchObjectStatsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool                `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message string              `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Stats   []*InteractionStats `protobuf:"bytes,3,rep,name=stats,proto3" json:"stats,omitempty"`
}

func (x *GetBatchObjectStatsResponse) Reset() {
	*x = GetBatchObjectStatsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_interaction_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBatchObjectStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBatchObjectStatsResponse) ProtoMessage() {}

func (x *GetBatchObjectStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_interaction_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBatchObjectStatsResponse.ProtoReflect.Descriptor instead.
func (*GetBatchObjectStatsResponse) Descriptor() ([]byte, []int) {
	return file_interaction_proto_rawDescGZIP(), []int{11}
}

func (x *GetBatchObjectStatsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetBatchObjectStatsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetBatchObjectStatsResponse) GetStats() []*InteractionStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

// 获取用户互动列表请求
type GetUserInteractionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId                int64                 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	InteractionType       InteractionType       `protobuf:"varint,2,opt,name=interaction_type,json=interactionType,proto3,enum=rest.InteractionType" json:"interaction_type,omitempty"`                           // 可选，过滤特定类型
	InteractionObjectType InteractionObjectType `protobuf:"varint,3,opt,name=interaction_object_type,json=interactionObjectType,proto3,enum=rest.InteractionObjectType" json:"interaction_object_type,omitempty"` // 可选，过滤特定对象类型
	Page                  int32                 `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	PageSize              int32                 `protobuf:"varint,5,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *GetUserInteractionsRequest) Reset() {
	*x = GetUserInteractionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_interaction_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserInteractionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserInteractionsRequest) ProtoMessage() {}

func (x *GetUserInteractionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_interaction_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserInteractionsRequest.ProtoReflect.Descriptor instead.
func (*GetUserInteractionsRequest) Descriptor() ([]byte, []int) {
	return file_interaction_proto_rawDescGZIP(), []int{12}
}

func (x *GetUserInteractionsRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetUserInteractionsRequest) GetInteractionType() InteractionType {
	if x != nil {
		return x.InteractionType
	}
	return InteractionType_INTERACTION_TYPE_UNSPECIFIED
}

func (x *GetUserInteractionsRequest) GetInteractionObjectType() InteractionObjectType {
	if x != nil {
		return x.InteractionObjectType
	}
	return InteractionObjectType_OBJECT_TYPE_UNSPECIFIED
}

func (x *GetUserInteractionsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetUserInteractionsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

// 获取用户互动列表响应
type GetUserInteractionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success      bool           `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message      string         `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Interactions []*Interaction `protobuf:"bytes,3,rep,name=interactions,proto3" json:"interactions,omitempty"`
	Total        int64          `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
	Page         int32          `protobuf:"varint,5,opt,name=page,proto3" json:"page,omitempty"`
	PageSize     int32          `protobuf:"varint,6,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *GetUserInteractionsResponse) Reset() {
	*x = GetUserInteractionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_interaction_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserInteractionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserInteractionsResponse) ProtoMessage() {}

func (x *GetUserInteractionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_interaction_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserInteractionsResponse.ProtoReflect.Descriptor instead.
func (*GetUserInteractionsResponse) Descriptor() ([]byte, []int) {
	return file_interaction_proto_rawDescGZIP(), []int{13}
}

func (x *GetUserInteractionsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetUserInteractionsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetUserInteractionsResponse) GetInteractions() []*Interaction {
	if x != nil {
		return x.Interactions
	}
	return nil
}

func (x *GetUserInteractionsResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetUserInteractionsResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetUserInteractionsResponse) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

// 获取对象互动列表请求
type GetObjectInteractionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectId              int64                 `protobuf:"varint,1,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
	InteractionObjectType InteractionObjectType `protobuf:"varint,2,opt,name=interaction_object_type,json=interactionObjectType,proto3,enum=rest.InteractionObjectType" json:"interaction_object_type,omitempty"`
	InteractionType       InteractionType       `protobuf:"varint,3,opt,name=interaction_type,json=interactionType,proto3,enum=rest.InteractionType" json:"interaction_type,omitempty"` // 可选，过滤特定类型
	Page                  int32                 `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	PageSize              int32                 `protobuf:"varint,5,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *GetObjectInteractionsRequest) Reset() {
	*x = GetObjectInteractionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_interaction_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetObjectInteractionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetObjectInteractionsRequest) ProtoMessage() {}

func (x *GetObjectInteractionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_interaction_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetObjectInteractionsRequest.ProtoReflect.Descriptor instead.
func (*GetObjectInteractionsRequest) Descriptor() ([]byte, []int) {
	return file_interaction_proto_rawDescGZIP(), []int{14}
}

func (x *GetObjectInteractionsRequest) GetObjectId() int64 {
	if x != nil {
		return x.ObjectId
	}
	return 0
}

func (x *GetObjectInteractionsRequest) GetInteractionObjectType() InteractionObjectType {
	if x != nil {
		return x.InteractionObjectType
	}
	return InteractionObjectType_OBJECT_TYPE_UNSPECIFIED
}

func (x *GetObjectInteractionsRequest) GetInteractionType() InteractionType {
	if x != nil {
		return x.InteractionType
	}
	return InteractionType_INTERACTION_TYPE_UNSPECIFIED
}

func (x *GetObjectInteractionsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetObjectInteractionsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

// 获取对象互动列表响应
type GetObjectInteractionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success      bool           `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message      string         `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Interactions []*Interaction `protobuf:"bytes,3,rep,name=interactions,proto3" json:"interactions,omitempty"`
	Total        int64          `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
	Page         int32          `protobuf:"varint,5,opt,name=page,proto3" json:"page,omitempty"`
	PageSize     int32          `protobuf:"varint,6,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *GetObjectInteractionsResponse) Reset() {
	*x = GetObjectInteractionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_interaction_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetObjectInteractionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetObjectInteractionsResponse) ProtoMessage() {}

func (x *GetObjectInteractionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_interaction_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetObjectInteractionsResponse.ProtoReflect.Descriptor instead.
func (*GetObjectInteractionsResponse) Descriptor() ([]byte, []int) {
	return file_interaction_proto_rawDescGZIP(), []int{15}
}

func (x *GetObjectInteractionsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetObjectInteractionsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetObjectInteractionsResponse) GetInteractions() []*Interaction {
	if x != nil {
		return x.Interactions
	}
	return nil
}

func (x *GetObjectInteractionsResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetObjectInteractionsResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetObjectInteractionsResponse) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

// 批量检查互动状态请求
type BatchCheckInteractionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId                int64                 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ObjectIds             []int64               `protobuf:"varint,2,rep,packed,name=object_ids,json=objectIds,proto3" json:"object_ids,omitempty"`
	InteractionObjectType InteractionObjectType `protobuf:"varint,3,opt,name=interaction_object_type,json=interactionObjectType,proto3,enum=rest.InteractionObjectType" json:"interaction_object_type,omitempty"`
	InteractionType       InteractionType       `protobuf:"varint,4,opt,name=interaction_type,json=interactionType,proto3,enum=rest.InteractionType" json:"interaction_type,omitempty"`
}

func (x *BatchCheckInteractionRequest) Reset() {
	*x = BatchCheckInteractionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_interaction_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchCheckInteractionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCheckInteractionRequest) ProtoMessage() {}

func (x *BatchCheckInteractionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_interaction_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCheckInteractionRequest.ProtoReflect.Descriptor instead.
func (*BatchCheckInteractionRequest) Descriptor() ([]byte, []int) {
	return file_interaction_proto_rawDescGZIP(), []int{16}
}

func (x *BatchCheckInteractionRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *BatchCheckInteractionRequest) GetObjectIds() []int64 {
	if x != nil {
		return x.ObjectIds
	}
	return nil
}

func (x *BatchCheckInteractionRequest) GetInteractionObjectType() InteractionObjectType {
	if x != nil {
		return x.InteractionObjectType
	}
	return InteractionObjectType_OBJECT_TYPE_UNSPECIFIED
}

func (x *BatchCheckInteractionRequest) GetInteractionType() InteractionType {
	if x != nil {
		return x.InteractionType
	}
	return InteractionType_INTERACTION_TYPE_UNSPECIFIED
}

// 批量检查互动状态响应
type BatchCheckInteractionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success      bool           `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message      string         `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Interactions map[int64]bool `protobuf:"bytes,3,rep,name=interactions,proto3" json:"interactions,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"` // object_id -> has_interaction
}

func (x *BatchCheckInteractionResponse) Reset() {
	*x = BatchCheckInteractionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_interaction_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchCheckInteractionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCheckInteractionResponse) ProtoMessage() {}

func (x *BatchCheckInteractionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_interaction_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCheckInteractionResponse.ProtoReflect.Descriptor instead.
func (*BatchCheckInteractionResponse) Descriptor() ([]byte, []int) {
	return file_interaction_proto_rawDescGZIP(), []int{17}
}

func (x *BatchCheckInteractionResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *BatchCheckInteractionResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *BatchCheckInteractionResponse) GetInteractions() map[int64]bool {
	if x != nil {
		return x.Interactions
	}
	return nil
}

// 互动事件消息（用于Kafka）
type InteractionEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventType       string                `protobuf:"bytes,1,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"`                                              // 事件类型
	UserId          int64                 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                                                      // 用户ID
	ObjectId        int64                 `protobuf:"varint,3,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`                                                // 对象ID
	ObjectType      InteractionObjectType `protobuf:"varint,4,opt,name=object_type,json=objectType,proto3,enum=rest.InteractionObjectType" json:"object_type,omitempty"`          // 对象类型
	InteractionType InteractionType       `protobuf:"varint,5,opt,name=interaction_type,json=interactionType,proto3,enum=rest.InteractionType" json:"interaction_type,omitempty"` // 互动类型
	Metadata        string                `protobuf:"bytes,6,opt,name=metadata,proto3" json:"metadata,omitempty"`                                                                 // 元数据
	Timestamp       int64                 `protobuf:"varint,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                                                              // 时间戳
}

func (x *InteractionEvent) Reset() {
	*x = InteractionEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_interaction_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InteractionEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InteractionEvent) ProtoMessage() {}

func (x *InteractionEvent) ProtoReflect() protoreflect.Message {
	mi := &file_interaction_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InteractionEvent.ProtoReflect.Descriptor instead.
func (*InteractionEvent) Descriptor() ([]byte, []int) {
	return file_interaction_proto_rawDescGZIP(), []int{18}
}

func (x *InteractionEvent) GetEventType() string {
	if x != nil {
		return x.EventType
	}
	return ""
}

func (x *InteractionEvent) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *InteractionEvent) GetObjectId() int64 {
	if x != nil {
		return x.ObjectId
	}
	return 0
}

func (x *InteractionEvent) GetObjectType() InteractionObjectType {
	if x != nil {
		return x.ObjectType
	}
	return InteractionObjectType_OBJECT_TYPE_UNSPECIFIED
}

func (x *InteractionEvent) GetInteractionType() InteractionType {
	if x != nil {
		return x.InteractionType
	}
	return InteractionType_INTERACTION_TYPE_UNSPECIFIED
}

func (x *InteractionEvent) GetMetadata() string {
	if x != nil {
		return x.Metadata
	}
	return ""
}

func (x *InteractionEvent) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

var File_interaction_proto protoreflect.FileDescriptor

var file_interaction_proto_rawDesc = []byte{
	0x0a, 0x11, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x04, 0x72, 0x65, 0x73, 0x74, 0x22, 0xa5, 0x02, 0x0a, 0x0b, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12,
	0x53, 0x0a, 0x17, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1b, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x15, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x40, 0x0a, 0x10, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15,
	0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x22, 0x8e, 0x02, 0x0a, 0x10, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x12, 0x53, 0x0a, 0x17, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x15, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x69, 0x6b, 0x65,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6c, 0x69,
	0x6b, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x66, 0x61, 0x76, 0x6f, 0x72,
	0x69, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0d, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x68, 0x61, 0x72, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x21, 0x0a, 0x0c, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0xff, 0x01, 0x0a, 0x14, 0x44, 0x6f, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x64, 0x12, 0x53, 0x0a, 0x17, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x15, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x40, 0x0a, 0x10, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x15, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x80, 0x01, 0x0a, 0x15, 0x44, 0x6f, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x33, 0x0a, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xe5, 0x01, 0x0a, 0x16, 0x55, 0x6e, 0x64, 0x6f,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x53, 0x0a, 0x17, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x72, 0x65, 0x73, 0x74,
	0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x15, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x40, 0x0a,
	0x10, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0f,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x22,
	0x4d, 0x0a, 0x17, 0x55, 0x6e, 0x64, 0x6f, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xe6,
	0x01, 0x0a, 0x17, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64,
	0x12, 0x53, 0x0a, 0x17, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1b, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x15,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x40, 0x0a, 0x10, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x15, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x22, 0xac, 0x01, 0x0a, 0x18, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x68, 0x61, 0x73, 0x5f,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0e, 0x68, 0x61, 0x73, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x33, 0x0a, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x89, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x53, 0x0a,
	0x17, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b,
	0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x15, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x22, 0x7a, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x2c, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x22, 0x90,
	0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x42, 0x61, 0x74, 0x63, 0x68, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x03, 0x52, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x73, 0x12, 0x53, 0x0a, 0x17,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e,
	0x72, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x15, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x22, 0x7f, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x42, 0x61, 0x74, 0x63, 0x68, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x2c, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x73, 0x22, 0xfd, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x40, 0x0a, 0x10, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0f, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x53, 0x0a, 0x17,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e,
	0x72, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x15, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x22, 0xcf, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x35, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x72,
	0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x22, 0x83, 0x02, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x64, 0x12, 0x53, 0x0a, 0x17, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x15, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x40, 0x0a, 0x10, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x15, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xd1, 0x01, 0x0a, 0x1d, 0x47,
	0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x35, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xed,
	0x01, 0x0a, 0x1c, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x09, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x73, 0x12, 0x53, 0x0a, 0x17, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x15, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x40, 0x0a, 0x10,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0f, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x22, 0xef,
	0x01, 0x0a, 0x1d, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x59, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x72, 0x65, 0x73,
	0x74, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a,
	0x3f, 0x0a, 0x11, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0xa1, 0x02, 0x0a, 0x10, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x3c, 0x0a, 0x0b, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1b, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x40, 0x0a, 0x10, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x15, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0f, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x2a, 0xa6, 0x01, 0x0a, 0x0f, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x1c, 0x49, 0x4e, 0x54, 0x45,
	0x52, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x49, 0x4e,
	0x54, 0x45, 0x52, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4c,
	0x49, 0x4b, 0x45, 0x10, 0x01, 0x12, 0x1d, 0x0a, 0x19, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x41, 0x43,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x46, 0x41, 0x56, 0x4f, 0x52, 0x49,
	0x54, 0x45, 0x10, 0x02, 0x12, 0x1a, 0x0a, 0x16, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x41, 0x43, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x48, 0x41, 0x52, 0x45, 0x10, 0x03,
	0x12, 0x1b, 0x0a, 0x17, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x52, 0x45, 0x50, 0x4f, 0x53, 0x54, 0x10, 0x04, 0x2a, 0x79, 0x0a,
	0x15, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x17, 0x4f, 0x42, 0x4a, 0x45, 0x43, 0x54,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x4f, 0x42, 0x4a, 0x45, 0x43, 0x54, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x50, 0x4f, 0x53, 0x54, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x4f, 0x42, 0x4a,
	0x45, 0x43, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x45, 0x4e, 0x54,
	0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x4f, 0x42, 0x4a, 0x45, 0x43, 0x54, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x10, 0x03, 0x32, 0xca, 0x05, 0x0a, 0x12, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x48, 0x0a, 0x0d, 0x44, 0x6f, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1a, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x44, 0x6f, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x72,
	0x65, 0x73, 0x74, 0x2e, 0x44, 0x6f, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x0f, 0x55, 0x6e, 0x64,
	0x6f, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x2e, 0x72,
	0x65, 0x73, 0x74, 0x2e, 0x55, 0x6e, 0x64, 0x6f, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x72, 0x65, 0x73,
	0x74, 0x2e, 0x55, 0x6e, 0x64, 0x6f, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x10, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x2e,
	0x72, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x72,
	0x65, 0x73, 0x74, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x60, 0x0a, 0x15,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x72, 0x65, 0x73, 0x74,
	0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b,
	0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x73,
	0x12, 0x1b, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e,
	0x72, 0x65, 0x73, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x13, 0x47,
	0x65, 0x74, 0x42, 0x61, 0x74, 0x63, 0x68, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x12, 0x20, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x20,
	0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x21, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x60, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x22, 0x2e, 0x72,
	0x65, 0x73, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x23, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x08, 0x5a, 0x06, 0x2e, 0x3b, 0x72, 0x65, 0x73, 0x74, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_interaction_proto_rawDescOnce sync.Once
	file_interaction_proto_rawDescData = file_interaction_proto_rawDesc
)

func file_interaction_proto_rawDescGZIP() []byte {
	file_interaction_proto_rawDescOnce.Do(func() {
		file_interaction_proto_rawDescData = protoimpl.X.CompressGZIP(file_interaction_proto_rawDescData)
	})
	return file_interaction_proto_rawDescData
}

var file_interaction_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_interaction_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_interaction_proto_goTypes = []interface{}{
	(InteractionType)(0),                  // 0: rest.InteractionType
	(InteractionObjectType)(0),            // 1: rest.InteractionObjectType
	(*Interaction)(nil),                   // 2: rest.Interaction
	(*InteractionStats)(nil),              // 3: rest.InteractionStats
	(*DoInteractionRequest)(nil),          // 4: rest.DoInteractionRequest
	(*DoInteractionResponse)(nil),         // 5: rest.DoInteractionResponse
	(*UndoInteractionRequest)(nil),        // 6: rest.UndoInteractionRequest
	(*UndoInteractionResponse)(nil),       // 7: rest.UndoInteractionResponse
	(*CheckInteractionRequest)(nil),       // 8: rest.CheckInteractionRequest
	(*CheckInteractionResponse)(nil),      // 9: rest.CheckInteractionResponse
	(*GetObjectStatsRequest)(nil),         // 10: rest.GetObjectStatsRequest
	(*GetObjectStatsResponse)(nil),        // 11: rest.GetObjectStatsResponse
	(*GetBatchObjectStatsRequest)(nil),    // 12: rest.GetBatchObjectStatsRequest
	(*GetBatchObjectStatsResponse)(nil),   // 13: rest.GetBatchObjectStatsResponse
	(*GetUserInteractionsRequest)(nil),    // 14: rest.GetUserInteractionsRequest
	(*GetUserInteractionsResponse)(nil),   // 15: rest.GetUserInteractionsResponse
	(*GetObjectInteractionsRequest)(nil),  // 16: rest.GetObjectInteractionsRequest
	(*GetObjectInteractionsResponse)(nil), // 17: rest.GetObjectInteractionsResponse
	(*BatchCheckInteractionRequest)(nil),  // 18: rest.BatchCheckInteractionRequest
	(*BatchCheckInteractionResponse)(nil), // 19: rest.BatchCheckInteractionResponse
	(*InteractionEvent)(nil),              // 20: rest.InteractionEvent
	nil,                                   // 21: rest.BatchCheckInteractionResponse.InteractionsEntry
}
var file_interaction_proto_depIdxs = []int32{
	1,  // 0: rest.Interaction.interaction_object_type:type_name -> rest.InteractionObjectType
	0,  // 1: rest.Interaction.interaction_type:type_name -> rest.InteractionType
	1,  // 2: rest.InteractionStats.interaction_object_type:type_name -> rest.InteractionObjectType
	1,  // 3: rest.DoInteractionRequest.interaction_object_type:type_name -> rest.InteractionObjectType
	0,  // 4: rest.DoInteractionRequest.interaction_type:type_name -> rest.InteractionType
	2,  // 5: rest.DoInteractionResponse.interaction:type_name -> rest.Interaction
	1,  // 6: rest.UndoInteractionRequest.interaction_object_type:type_name -> rest.InteractionObjectType
	0,  // 7: rest.UndoInteractionRequest.interaction_type:type_name -> rest.InteractionType
	1,  // 8: rest.CheckInteractionRequest.interaction_object_type:type_name -> rest.InteractionObjectType
	0,  // 9: rest.CheckInteractionRequest.interaction_type:type_name -> rest.InteractionType
	2,  // 10: rest.CheckInteractionResponse.interaction:type_name -> rest.Interaction
	1,  // 11: rest.GetObjectStatsRequest.interaction_object_type:type_name -> rest.InteractionObjectType
	3,  // 12: rest.GetObjectStatsResponse.stats:type_name -> rest.InteractionStats
	1,  // 13: rest.GetBatchObjectStatsRequest.interaction_object_type:type_name -> rest.InteractionObjectType
	3,  // 14: rest.GetBatchObjectStatsResponse.stats:type_name -> rest.InteractionStats
	0,  // 15: rest.GetUserInteractionsRequest.interaction_type:type_name -> rest.InteractionType
	1,  // 16: rest.GetUserInteractionsRequest.interaction_object_type:type_name -> rest.InteractionObjectType
	2,  // 17: rest.GetUserInteractionsResponse.interactions:type_name -> rest.Interaction
	1,  // 18: rest.GetObjectInteractionsRequest.interaction_object_type:type_name -> rest.InteractionObjectType
	0,  // 19: rest.GetObjectInteractionsRequest.interaction_type:type_name -> rest.InteractionType
	2,  // 20: rest.GetObjectInteractionsResponse.interactions:type_name -> rest.Interaction
	1,  // 21: rest.BatchCheckInteractionRequest.interaction_object_type:type_name -> rest.InteractionObjectType
	0,  // 22: rest.BatchCheckInteractionRequest.interaction_type:type_name -> rest.InteractionType
	21, // 23: rest.BatchCheckInteractionResponse.interactions:type_name -> rest.BatchCheckInteractionResponse.InteractionsEntry
	1,  // 24: rest.InteractionEvent.object_type:type_name -> rest.InteractionObjectType
	0,  // 25: rest.InteractionEvent.interaction_type:type_name -> rest.InteractionType
	4,  // 26: rest.InteractionService.DoInteraction:input_type -> rest.DoInteractionRequest
	6,  // 27: rest.InteractionService.UndoInteraction:input_type -> rest.UndoInteractionRequest
	8,  // 28: rest.InteractionService.CheckInteraction:input_type -> rest.CheckInteractionRequest
	18, // 29: rest.InteractionService.BatchCheckInteraction:input_type -> rest.BatchCheckInteractionRequest
	10, // 30: rest.InteractionService.GetObjectStats:input_type -> rest.GetObjectStatsRequest
	12, // 31: rest.InteractionService.GetBatchObjectStats:input_type -> rest.GetBatchObjectStatsRequest
	14, // 32: rest.InteractionService.GetUserInteractions:input_type -> rest.GetUserInteractionsRequest
	16, // 33: rest.InteractionService.GetObjectInteractions:input_type -> rest.GetObjectInteractionsRequest
	5,  // 34: rest.InteractionService.DoInteraction:output_type -> rest.DoInteractionResponse
	7,  // 35: rest.InteractionService.UndoInteraction:output_type -> rest.UndoInteractionResponse
	9,  // 36: rest.InteractionService.CheckInteraction:output_type -> rest.CheckInteractionResponse
	19, // 37: rest.InteractionService.BatchCheckInteraction:output_type -> rest.BatchCheckInteractionResponse
	11, // 38: rest.InteractionService.GetObjectStats:output_type -> rest.GetObjectStatsResponse
	13, // 39: rest.InteractionService.GetBatchObjectStats:output_type -> rest.GetBatchObjectStatsResponse
	15, // 40: rest.InteractionService.GetUserInteractions:output_type -> rest.GetUserInteractionsResponse
	17, // 41: rest.InteractionService.GetObjectInteractions:output_type -> rest.GetObjectInteractionsResponse
	34, // [34:42] is the sub-list for method output_type
	26, // [26:34] is the sub-list for method input_type
	26, // [26:26] is the sub-list for extension type_name
	26, // [26:26] is the sub-list for extension extendee
	0,  // [0:26] is the sub-list for field type_name
}

func init() { file_interaction_proto_init() }
func file_interaction_proto_init() {
	if File_interaction_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_interaction_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Interaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_interaction_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InteractionStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_interaction_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DoInteractionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_interaction_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DoInteractionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_interaction_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UndoInteractionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_interaction_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UndoInteractionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_interaction_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckInteractionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_interaction_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckInteractionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_interaction_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetObjectStatsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_interaction_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetObjectStatsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_interaction_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBatchObjectStatsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_interaction_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBatchObjectStatsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_interaction_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserInteractionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_interaction_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserInteractionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_interaction_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetObjectInteractionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_interaction_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetObjectInteractionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_interaction_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchCheckInteractionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_interaction_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchCheckInteractionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_interaction_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InteractionEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_interaction_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_interaction_proto_goTypes,
		DependencyIndexes: file_interaction_proto_depIdxs,
		EnumInfos:         file_interaction_proto_enumTypes,
		MessageInfos:      file_interaction_proto_msgTypes,
	}.Build()
	File_interaction_proto = out.File
	file_interaction_proto_rawDesc = nil
	file_interaction_proto_goTypes = nil
	file_interaction_proto_depIdxs = nil
}
