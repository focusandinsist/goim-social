syntax = "proto3";

package rest;

option go_package = ".;rest";

// 内容类型枚举
enum ContentType {
  CONTENT_TYPE_UNSPECIFIED = 0;
  CONTENT_TYPE_TEXT = 1; // 纯文本
  CONTENT_TYPE_IMAGE = 2; // 图片
  CONTENT_TYPE_VIDEO = 3; // 视频
  CONTENT_TYPE_AUDIO = 4; // 音频
  CONTENT_TYPE_MIXED = 5; // 图文混合
  CONTENT_TYPE_TEMPLATE = 6; // 模板内容
}

// 内容状态枚举
enum ContentStatus {
  CONTENT_STATUS_UNSPECIFIED = 0;
  CONTENT_STATUS_DRAFT = 1; // 草稿
  CONTENT_STATUS_PENDING = 2; // 待审核
  CONTENT_STATUS_PUBLISHED = 3; // 已发布
  CONTENT_STATUS_REJECTED = 4; // 已拒绝
  CONTENT_STATUS_DELETED = 5; // 已删除
}

// 媒体文件信息
message MediaFile {
  string url = 1; // 文件URL
  string filename = 2; // 文件名
  int64 size = 3; // 文件大小(字节)
  string mime_type = 4; // MIME类型
  int32 width = 5; // 宽度(图片/视频)
  int32 height = 6; // 高度(图片/视频)
  int32 duration = 7; // 时长(音频/视频，秒)
}

// 内容标签
message ContentTag {
  int64 id = 1;
  string name = 2;
  string color = 3; // 标签颜色
  int64 usage_count = 4; // 使用次数
}

// 内容话题
message ContentTopic {
  int64 id = 1;
  string name = 2;
  string description = 3;
  string cover_image = 4; // 话题封面
  int64 content_count = 5; // 内容数量
  bool is_hot = 6; // 是否热门话题
}

// 内容信息
message Content {
  int64 id = 1;
  int64 author_id = 2;
  string title = 3;
  string content = 4; // 文本内容
  ContentType type = 5;
  ContentStatus status = 6;
  repeated MediaFile media_files = 7; // 媒体文件列表
  repeated ContentTag tags = 8; // 标签列表
  repeated ContentTopic topics = 9; // 话题列表
  string template_data = 10; // 模板数据(JSON格式)
  int64 view_count = 11; // 浏览次数
  int64 like_count = 12; // 点赞数
  int64 comment_count = 13; // 评论数
  int64 share_count = 14; // 分享数
  int64 favorite_count = 15; // 收藏数
  string created_at = 16;
  string updated_at = 17;
  string published_at = 18; // 发布时间
}

// 创建内容请求
message CreateContentRequest {
  int64 author_id = 1;
  string title = 2;
  string content = 3;
  ContentType type = 4;
  repeated MediaFile media_files = 5;
  repeated int64 tag_ids = 6; // 标签ID列表
  repeated int64 topic_ids = 7; // 话题ID列表
  string template_data = 8;
  bool save_as_draft = 9; // 是否保存为草稿
}

// 创建内容响应
message CreateContentResponse {
  bool success = 1;
  string message = 2;
  Content content = 3;
}

// 更新内容请求
message UpdateContentRequest {
  int64 content_id = 1;
  int64 author_id = 2; // 用于权限验证
  string title = 3;
  string content = 4;
  ContentType type = 5;
  repeated MediaFile media_files = 6;
  repeated int64 tag_ids = 7;
  repeated int64 topic_ids = 8;
  string template_data = 9;
}

// 更新内容响应
message UpdateContentResponse {
  bool success = 1;
  string message = 2;
  Content content = 3;
}

// 获取内容请求
message GetContentRequest {
  int64 content_id = 1;
  int64 user_id = 2; // 用于权限验证和个性化
}

// 获取内容响应
message GetContentResponse {
  bool success = 1;
  string message = 2;
  Content content = 3;
}

// 删除内容请求
message DeleteContentRequest {
  int64 content_id = 1;
  int64 author_id = 2; // 用于权限验证
}

// 删除内容响应
message DeleteContentResponse {
  bool success = 1;
  string message = 2;
}

// 发布内容请求
message PublishContentRequest {
  int64 content_id = 1;
  int64 author_id = 2; // 用于权限验证
}

// 发布内容响应
message PublishContentResponse {
  bool success = 1;
  string message = 2;
  Content content = 3;
}

// 内容状态变更请求
message ChangeContentStatusRequest {
  int64 content_id = 1;
  int64 operator_id = 2; // 操作者ID
  ContentStatus new_status = 3; // 新状态
  string reason = 4; // 状态变更原因
}

// 内容状态变更响应
message ChangeContentStatusResponse {
  bool success = 1;
  string message = 2;
  Content content = 3;
}

// 获取用户内容列表请求
message GetUserContentRequest {
  int64 author_id = 1;
  ContentStatus status = 2; // 状态过滤
  int32 page = 3;
  int32 page_size = 4;
}

// 获取用户内容列表响应
message GetUserContentResponse {
  bool success = 1;
  string message = 2;
  repeated Content contents = 3;
  int64 total = 4;
  int32 page = 5;
  int32 page_size = 6;
}

// 创建标签请求
message CreateTagRequest {
  string name = 1;
}

// 创建标签响应
message CreateTagResponse {
  bool success = 1;
  string message = 2;
  ContentTag tag = 3;
}

// 获取标签列表请求
message GetTagsRequest {
  string keyword = 1; // 搜索关键词
  int32 page = 2;
  int32 page_size = 3;
}

// 获取标签列表响应
message GetTagsResponse {
  bool success = 1;
  string message = 2;
  repeated ContentTag tags = 3;
  int64 total = 4;
}

// 创建话题请求
message CreateTopicRequest {
  string name = 1;
  string description = 2;
  string cover_image = 3;
}

// 创建话题响应
message CreateTopicResponse {
  bool success = 1;
  string message = 2;
  ContentTopic topic = 3;
}

// 获取话题列表请求
message GetTopicsRequest {
  string keyword = 1; // 搜索关键词
  bool hot_only = 2; // 只获取热门话题
  int32 page = 3;
  int32 page_size = 4;
}

// 获取话题列表响应
message GetTopicsResponse {
  bool success = 1;
  string message = 2;
  repeated ContentTopic topics = 3;
  int64 total = 4;
}

// 内容统计请求
message GetContentStatsRequest {
  int64 author_id = 1; // 可选，获取特定作者的统计
}

// 内容统计响应
message GetContentStatsResponse {
  bool success = 1;
  string message = 2;
  int64 total_contents = 3; // 总内容数
  int64 published_contents = 4; // 已发布内容数
  int64 draft_contents = 5; // 草稿数
  int64 pending_contents = 6; // 待审核数
  int64 total_views = 7; // 总浏览数
  int64 total_likes = 8; // 总点赞数
}

// ==================== 评论相关消息定义 ====================

// 目标类型枚举
enum TargetType {
  TARGET_TYPE_UNSPECIFIED = 0;
  TARGET_TYPE_CONTENT = 1;  // 内容/帖子
  TARGET_TYPE_COMMENT = 2;  // 评论
  TARGET_TYPE_USER = 3;     // 用户
}

// 评论状态枚举
enum CommentStatus {
  COMMENT_STATUS_UNSPECIFIED = 0;
  COMMENT_STATUS_PENDING = 1;   // 待审核
  COMMENT_STATUS_APPROVED = 2;  // 已通过
  COMMENT_STATUS_REJECTED = 3;  // 已拒绝
  COMMENT_STATUS_DELETED = 4;   // 已删除
}

// 互动类型枚举
enum InteractionType {
  INTERACTION_TYPE_UNSPECIFIED = 0;
  INTERACTION_TYPE_LIKE = 1;     // 点赞
  INTERACTION_TYPE_FAVORITE = 2; // 收藏
  INTERACTION_TYPE_SHARE = 3;    // 分享
  INTERACTION_TYPE_REPOST = 4;   // 转发
}

// 评论信息
message Comment {
  int64 id = 1;
  int64 target_id = 2;
  TargetType target_type = 3;
  int64 user_id = 4;
  string user_name = 5;
  string user_avatar = 6;
  string content = 7;
  int64 parent_id = 8;
  int64 root_id = 9;
  int64 reply_to_user_id = 10;
  string reply_to_user_name = 11;
  CommentStatus status = 12;
  int32 like_count = 13;
  int32 reply_count = 14;
  bool is_pinned = 15;
  bool is_hot = 16;
  string created_at = 17;
  string updated_at = 18;
}

// 互动信息
message Interaction {
  int64 id = 1;
  int64 user_id = 2;
  int64 target_id = 3;
  TargetType target_type = 4;
  InteractionType interaction_type = 5;
  string metadata = 6;
  string created_at = 7;
  string updated_at = 8;
}

// 互动统计信息
message InteractionStats {
  int64 target_id = 1;
  TargetType target_type = 2;
  int64 like_count = 3;
  int64 favorite_count = 4;
  int64 share_count = 5;
  int64 repost_count = 6;
}

// 创建评论请求
message CreateCommentRequest {
  int64 target_id = 1;
  TargetType target_type = 2;
  int64 user_id = 3;
  string user_name = 4;
  string user_avatar = 5;
  string content = 6;
  int64 parent_id = 7;
  int64 reply_to_user_id = 8;
  string reply_to_user_name = 9;
  string ip_address = 10;
  string user_agent = 11;
}

// 创建评论响应
message CreateCommentResponse {
  bool success = 1;
  string message = 2;
  Comment comment = 3;
}

// 删除评论请求
message DeleteCommentRequest {
  int64 comment_id = 1;
  int64 user_id = 2;
}

// 删除评论响应
message DeleteCommentResponse {
  bool success = 1;
  string message = 2;
}

// 获取评论列表请求
message GetCommentsRequest {
  int64 target_id = 1;
  TargetType target_type = 2;
  int64 parent_id = 3; // 0表示获取顶级评论
  string sort_by = 4;  // time, hot, like
  string sort_order = 5; // asc, desc
  int32 page = 6;
  int32 page_size = 7;
}

// 获取评论列表响应
message GetCommentsResponse {
  bool success = 1;
  string message = 2;
  repeated Comment comments = 3;
  int64 total = 4;
  int32 page = 5;
  int32 page_size = 6;
}

// 获取评论回复请求
message GetCommentRepliesRequest {
  int64 comment_id = 1;
  string sort_by = 2;
  string sort_order = 3;
  int32 page = 4;
  int32 page_size = 5;
}

// 获取评论回复响应
message GetCommentRepliesResponse {
  bool success = 1;
  string message = 2;
  repeated Comment replies = 3;
  int64 total = 4;
  int32 page = 5;
  int32 page_size = 6;
}

// ==================== 互动相关消息定义 ====================

// 执行互动请求
message DoInteractionRequest {
  int64 user_id = 1;
  int64 target_id = 2;
  TargetType target_type = 3;
  InteractionType interaction_type = 4;
  string metadata = 5;
}

// 执行互动响应
message DoInteractionResponse {
  bool success = 1;
  string message = 2;
  Interaction interaction = 3;
}

// 取消互动请求
message UndoInteractionRequest {
  int64 user_id = 1;
  int64 target_id = 2;
  TargetType target_type = 3;
  InteractionType interaction_type = 4;
}

// 取消互动响应
message UndoInteractionResponse {
  bool success = 1;
  string message = 2;
}

// 检查互动请求
message CheckInteractionRequest {
  int64 user_id = 1;
  int64 target_id = 2;
  TargetType target_type = 3;
  InteractionType interaction_type = 4;
}

// 检查互动响应
message CheckInteractionResponse {
  bool success = 1;
  string message = 2;
  bool has_interaction = 3;
  Interaction interaction = 4;
}

// 获取互动统计请求
message GetInteractionStatsRequest {
  int64 target_id = 1;
  TargetType target_type = 2;
}

// 获取互动统计响应
message GetInteractionStatsResponse {
  bool success = 1;
  string message = 2;
  InteractionStats stats = 3;
}

// ==================== 综合查询消息定义 ====================

// 内容详情（包含评论和互动）
message ContentDetail {
  Content content = 1;
  repeated Comment top_comments = 2; // 热门评论
  InteractionStats interaction_stats = 3;
  map<string, bool> user_interactions = 4; // 当前用户的互动状态
}

// 获取内容详情请求
message GetContentDetailRequest {
  int64 content_id = 1;
  int64 user_id = 2; // 可选，用于获取用户互动状态
  int32 comment_limit = 3; // 返回的评论数量限制
}

// 获取内容详情响应
message GetContentDetailResponse {
  bool success = 1;
  string message = 2;
  ContentDetail detail = 3;
}

// 内容流项目
message ContentFeedItem {
  Content content = 1;
  InteractionStats interaction_stats = 2;
  map<string, bool> user_interactions = 3; // 当前用户的互动状态
  int32 comment_preview_count = 4; // 预览评论数量
}

// 获取内容流请求
message GetContentFeedRequest {
  int64 user_id = 1; // 可选，用于个性化推荐
  string content_type = 2; // 可选，过滤内容类型
  string sort_by = 3; // time, hot, trending
  int32 page = 4;
  int32 page_size = 5;
}

// 获取内容流响应
message GetContentFeedResponse {
  bool success = 1;
  string message = 2;
  repeated ContentFeedItem items = 3;
  int64 total = 4;
  int32 page = 5;
  int32 page_size = 6;
}

// 获取热门内容请求
message GetTrendingContentRequest {
  string time_range = 1; // hour, day, week, month
  string content_type = 2; // 可选，过滤内容类型
  int32 limit = 3;
}

// 获取热门内容响应
message GetTrendingContentResponse {
  bool success = 1;
  string message = 2;
  repeated ContentFeedItem items = 3;
}

// 内容服务的gRPC接口
service ContentService {
  // 内容管理
  rpc CreateContent(CreateContentRequest) returns (CreateContentResponse);
  rpc UpdateContent(UpdateContentRequest) returns (UpdateContentResponse);
  rpc GetContent(GetContentRequest) returns (GetContentResponse);
  rpc DeleteContent(DeleteContentRequest) returns (DeleteContentResponse);
  rpc PublishContent(PublishContentRequest) returns (PublishContentResponse);
  rpc ChangeContentStatus(ChangeContentStatusRequest) returns (ChangeContentStatusResponse);

  // 内容查询
  rpc GetUserContent(GetUserContentRequest) returns (GetUserContentResponse);
  rpc GetContentStats(GetContentStatsRequest) returns (GetContentStatsResponse);

  // 标签管理
  rpc CreateTag(CreateTagRequest) returns (CreateTagResponse);
  rpc GetTags(GetTagsRequest) returns (GetTagsResponse);

  // 话题管理
  rpc CreateTopic(CreateTopicRequest) returns (CreateTopicResponse);
  rpc GetTopics(GetTopicsRequest) returns (GetTopicsResponse);

  // 评论管理
  rpc CreateComment(CreateCommentRequest) returns (CreateCommentResponse);
  rpc DeleteComment(DeleteCommentRequest) returns (DeleteCommentResponse);
  rpc GetComments(GetCommentsRequest) returns (GetCommentsResponse);
  rpc GetCommentReplies(GetCommentRepliesRequest) returns (GetCommentRepliesResponse);

  // 互动管理
  rpc DoInteraction(DoInteractionRequest) returns (DoInteractionResponse);
  rpc UndoInteraction(UndoInteractionRequest) returns (UndoInteractionResponse);
  rpc CheckInteraction(CheckInteractionRequest) returns (CheckInteractionResponse);
  rpc GetInteractionStats(GetInteractionStatsRequest) returns (GetInteractionStatsResponse);

  // 综合查询
  rpc GetContentDetail(GetContentDetailRequest) returns (GetContentDetailResponse);
  rpc GetContentFeed(GetContentFeedRequest) returns (GetContentFeedResponse);
  rpc GetTrendingContent(GetTrendingContentRequest) returns (GetTrendingContentResponse);
}
